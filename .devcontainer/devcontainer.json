// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/python-3
{
  "name": "Learning_LLMs", // Name of the development container

  // Build configuration for the container
  "build": {
      "dockerfile": "Dockerfile", // Path to the Dockerfile
      "context": ".."            // Build context for the Dockerfile
  },

  // Configure tool-specific properties
  "customizations": {
    
      // VS Code-specific configurations
      "vscode": {
          // Default settings applied when the container is created
          // "settings": {
          //     "python.defaultInterpreterPath": "/usr/local/bin/python" // Path to the default Python interpreter
          // },

          // Extensions to install automatically in the container
          "extensions": [
              "ms-python.python",       // Python language support
              "davidanson.vscode-markdownlint",
              "github.copilot",
              "ms-azuretools.vscode-docker"
          ]
      }
    },

    
    "features": {
      "ghcr.io/prulloac/devcontainer-features/ollama:1": {}
    },

  // Uncomment to add features (e.g., Node.js, Docker CLI) to the container
  // "features": {
  //     "node": "16", // Example: Install Node.js version 16
  //     "docker-in-docker": "latest" // Example: Enable Docker-in-Docker
  // }, 
  //   "features": {
  //     "ghcr.io/prulloac/devcontainer-features/ollama:1": {}
  //   },

  // Uncomment to forward specific ports from the container to the host
  // "forwardPorts": [8080, 3000], // Example: Forward ports 8080 and 3000

  // Uncomment to set environment variables inside the container
  // "containerEnv": {
  //     "EXAMPLE_ENV_VAR": "value" // Example: Set an environment variable
  // },

  // Uncomment to mount additional volumes into the container
  // "mounts": [
  //     "source=/path/on/host,target=/path/in/container,type=bind" // Example: Bind mount a host directory
  // ],

  // Uncomment to run commands after the container is created (only runs once)
  // "postCreateCommand": "echo 'Container created!'", // Example: Run a command after container creation

  // Uncomment to set the default working directory inside the container
  // "workspaceFolder": "/workspaces/learning-python-2025", // Example: Set the workspace folder

  // Uncomment to specify the user to connect as inside the container
  // "remoteUser": "root", // Example: Connect as root instead of the default non-root user

  // Uncomment to set memory or CPU limits for the container
  // "runArgs": [
  //     "--memory=4g", // Example: Limit memory to 4GB
  //     "--cpus=2"     // Example: Limit CPU usage to 2 cores
  // ]

  // Command to run after the container is started (runs every time the container starts)
  //"postStartCommand":   "pip install --upgrade pip && pip install -r requirements.txt"
  // "postStartCommand":   "pip install -r requirements.txt"

}